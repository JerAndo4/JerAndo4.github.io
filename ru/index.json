[{"authors":null,"categories":null,"content":"Никита Кармацкий - студент Российского университета дружбы народов. Помогает учащимся средней школы подготовиться к ОГЭ по информатике. Хочет стать разработчиком программного обеспечения.\n","date":1652918400,"expirydate":-62135596800,"kind":"term","lang":"ru","lastmod":1652918400,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Никита Кармацкий - студент Российского университета дружбы народов. Помогает учащимся средней школы подготовиться к ОГЭ по информатике. Хочет стать разработчиком программного обеспечения.","tags":null,"title":"Никита Кармацкий","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://jerando4.github.io/ru/talk/%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D0%BD%D1%8B%D0%B8-%D1%80%D0%B0%D0%B7%D0%B3%D0%BE%D0%B2%D0%BE%D1%80/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/talk/%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D0%BD%D1%8B%D0%B8-%D1%80%D0%B0%D0%B7%D0%B3%D0%BE%D0%B2%D0%BE%D1%80/","section":"event","summary":"Пример выступления с использованием функции Wowchemy Markdown slides.","tags":[],"title":"Примерный разговор","type":"event"},{"authors":["Никита Кармацкий"],"categories":["пост 4"],"content":"Обзор   На четвертой неделе я сделал все лабораторные работы, которые доступны на данный момент.\n  Я всю неделю вкусно питался.\n  Я больше не знаю, что писать, поэтому я вставлю цитату Альберто Мангеля о Великой библиотеке:\n  “Мы можем бродить вдоль обугленных стеллажей Александрийской библиотеки, где собрано всё воображение и вся мудрость; и видеть в её гибели предупреждение о том, что всё, собранное нами, будет утрачено”\n","date":1652918400,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652918400,"objectID":"321f8a77726c0a700459d93d6f2e5ab0","permalink":"https://jerando4.github.io/ru/post/4-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","publishdate":"2022-05-19T00:00:00Z","relpermalink":"/ru/post/4-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","section":"post","summary":"Обзор   На четвертой неделе я сделал все лабораторные работы, которые доступны на данный момент.\n  Я всю неделю вкусно питался.\n  Я больше не знаю, что писать, поэтому я вставлю цитату Альберто Мангеля о Великой библиотеке:","tags":["4 неделя"],"title":"Как прошла моя четвертая неделя","type":"post"},{"authors":["Никита Кармацкий"],"categories":["пост 4"],"content":"Существует как минимум 2 языка программирования:\n  Язык программирования Julia\n  Язык программирования GNU Octave\n  Сегодня мы поговорим о них.\n1. Julia Julia — это высокоуровневый, высокопроизводительный бесплатный язык программирования с динамической типизацией, созданный для математических вычислений. Он также эффективен для написания программ общего назначения.Синтаксис языка похож на синтаксис других математических языков (например, MATLAB и Octave), но имеет некоторые существенные отличия. Julia написана на C, C++ и Scheme. Стандартный пакет включает в себя JIT-компилятор на базе LLVM, благодаря которому, по словам авторов языка, приложения, написанные полностью на языке, практически не уступают по производительности приложениям, написанным на статически скомпилированных языках, таких как C или C++. Большая часть стандартной библиотеки языка написана на том же языке. Язык также имеет встроенную поддержку большого количества команд для распределенных вычислений.\nЯзык динамичен, но использует JIT-компиляцию. Благодаря этому достигается высокая скорость приложений, написанных на “чистом” языке, без использования низкоуровневых библиотек и векторных операций. Поддерживается перегрузка функций и операторов (которые на самом деле также являются функциями), в то время как при желании вы можете указать тип для аргументов функции, который обычно недоступен в языках с динамически типизированной структурой. Это позволяет создавать специализированные версии функций и операторов для ускорения вычислений. Наиболее подходящая версия функции выбирается автоматически во время выполнения. Кроме того, благодаря перегрузке операторов можно создавать новые типы данных, которые ведут себя как встроенные типы.\nОдним из приоритетов в разработке языка является поддержка распределенных вычислений. Существует большое количество стандартных конструкций для распараллеливания кода.\n2. GNU Octave GNU Octave — это бесплатная программная система для математических вычислений с использованием языка высокого уровня, совместимого с MATLAB.\nOctave - это интерактивный командный интерфейс для решения линейных и нелинейных математических задач, а также проведения других численных экспериментов. Кроме того, Octave можно использовать для пакетной обработки. Язык Octave оперирует арифметикой действительных и комплексных скаляров, векторов и матриц, имеет расширения для решения линейных алгебраических задач, нахождения корней систем нелинейных алгебраических уравнений, работы с полиномами, решения различных дифференциальных уравнений, интегрирования систем дифференциальных и дифференциально-алгебраических уравнений первого порядка, интегрирования функций на конечные и бесконечные интервалы. Этот список можно легко расширить с помощью языка Octave (или с помощью динамически загружаемых модулей, созданных на C, C++, Fortran и т.д.). Вы можете использовать любые цифры в нумерованном списке — это не имеет значения. При преобразовании в HTML или другой формат числа станут правильными и последовательными (1, 2, 3 и т.д.).\nOctave - это интерпретируемый язык программирования. Он похож на C и поддерживает большинство основных функций стандартной библиотеки C, а также основные команды Unix и системные вызовы. С другой стороны, он не поддерживает передачу аргументов по ссылке (конструктивная особенность).\nThe syntax of the language is very similar to MATLAB, and well-written scripts will run in both Octave and MATLAB.\n","date":1652918400,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652918400,"objectID":"cb514bfcc7e97980857a61f64cb6d30a","permalink":"https://jerando4.github.io/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F/","publishdate":"2022-05-19T00:00:00Z","relpermalink":"/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F/","section":"post","summary":"Существует как минимум 2 языка программирования:\n  Язык программирования Julia\n  Язык программирования GNU Octave\n  Сегодня мы поговорим о них.\n1. Julia Julia — это высокоуровневый, высокопроизводительный бесплатный язык программирования с динамической типизацией, созданный для математических вычислений.","tags":["4 неделя"],"title":"Языки научиного программирования","type":"post"},{"authors":null,"categories":null,"content":"Различные программы для программирования на C++\n","date":1652486400,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652486400,"objectID":"027d629eb14253e1566e31d14c7283c0","permalink":"https://jerando4.github.io/ru/project/c++/","publishdate":"2022-05-14T00:00:00Z","relpermalink":"/ru/project/c++/","section":"project","summary":"Различные программы для программирования на C++","tags":["C"],"title":"C++ и окружение","type":"project"},{"authors":null,"categories":null,"content":"Различные программы для программирования на Python\n","date":1652486400,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652486400,"objectID":"4ea90f9f6fbe3f365644149f03c7dd55","permalink":"https://jerando4.github.io/ru/project/python/","publishdate":"2022-05-14T00:00:00Z","relpermalink":"/ru/project/python/","section":"project","summary":"Различные программы для программирования на Python","tags":["Python"],"title":"Python и окружение","type":"project"},{"authors":["Никита Кармацкий"],"categories":["пост 3"],"content":"  На третьей неделе я сделал все лабораторные работы, которые доступны на данный момент.\n  Я всю неделю вкусно питался.\n  РИ научился писать программы на Python.\n  Я больше не знаю, что написать, поэтому цитата из одной из моих любимых видеоигр на русском языке:\n  \u0026#34;— Зло — это зло, Стрегобор, — серьёзно сказал ведьмак, вставая. — Меньшее, бо́льшее, среднее — всё едино, пропорции условны, а границы размыты. Я не святой отшельник, не только одно добро творил в жизни. Но если приходится выбирать между одним злом и другим, я предпочитаю не выбирать вообще. — «Последнее желание», рассказ «Меньшее зло»\u0026#34;\n","date":1652486400,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652486400,"objectID":"7fbb14f5297c09cd86598906da6b92ae","permalink":"https://jerando4.github.io/ru/post/3-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","publishdate":"2022-05-14T00:00:00Z","relpermalink":"/ru/post/3-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","section":"post","summary":"На третьей неделе я сделал все лабораторные работы, которые доступны на данный момент.\n  Я всю неделю вкусно питался.\n  РИ научился писать программы на Python.","tags":["3 неделя"],"title":"Как прошла моя третья неделя","type":"post"},{"authors":["Никита Кармацкий"],"categories":["пост 3"],"content":"Хорошая презентация начинается с вопросов к самому себе. Самую важную часть вы можете сделать в блокноте, даже не включая компьютер. Сначала вы выбираете тему, определяете цель и распределяете аргументы в правильном порядке. И только теперь вы можете открыть программу и искать картинки для презентации.\n1. Сформулируйте тему Трудно слушать собеседника, который перескакивает с одного на другое, поэтому в презентации должна быть только одна тема. В противном случае это будет долгая история ни о чем. Тема должна быть достаточно узкой, чтобы в конце предложить решение проблемы. Сужайте тему до тех пор, пока презентация не сможет быть представлена в десяти коротких абзацах.\nЛегко определить хорошую тему — она подсказывает структуру самой речи.\n *** Широкая тема, мысли скачут***\nПубличные выступления\nЧто такое публичные выступления\nКогда мы выступаем публично\nКак подготовиться\nКак работать с аудиторией\n *** Узкая тема, история льется***\nКак справиться со страхом публичных выступлений\nПочему мы боимся\nКак перестать бояться\nЧто делать, если вы выступаете в первый раз\n2. Определите цель Хорошая презентация меняет нынешнюю картину мира. Например, люди начинают больше заботиться об окружающей среде или бегут за новым смартфоном. Цель не обязательно должна быть амбициозной, главное - конкретной.\nХорошая цель презентации начинается с вопроса: что я хочу изменить в поведении слушателей.\n Абстрактная цель\nЭто хорошо, чтобы выступать\nПродайте продукт\nПокажите, что продукт хорош\n Конкретная цель\nУбедите, что новая модель потребляет на 20% меньше бензина\nДокажите, что продажи падают, но это нормально\nУбедите владельцев отвести своих животных на ежегодную вакцинацию\n3. Продумайте сценарий Цель презентации - это то, что вы хотите изменить в голове слушателя, а сценарий - это то, как вы придете к этим изменениям.\nПредставьте, что вы сочиняете историю. Слушатель должен быть заинтригован, придумать интересного героя, провести его через трудности к успешному финалу. Это основная структура любого текста и презентации. Сказки, сценарии фильмов и реклама товаров основаны на такой структуре\n4. Правило третей Это правило создания презентаций помогает расположить объекты на слайде так, чтобы глаз сразу выделял самое важное. Разделите слайд на три части вдоль и поперек. Размещайте значимые объекты на перекрестках. Важными объектами являются названия и иллюстрации.\n5. Тексты короче Один слайд - это одна мысль. Этот слайд легко читать и запоминать. Если вы выступите публично, это привлечет внимание аудитории. Точное количество текста на слайде зависит от размера аудитории. Если человек читает презентацию на экране, абзац текста его не испугает. Если вы выступаете перед аудиторией из ста человек, вам будет трудно прочитать более десяти слов на слайде.\n6. Добавление изображений Фотографии и значки помогают раскрыть содержание, но не должны заменять его. Если вы нашли красивую фотографию “в тему”, которая не помогает раскрыть идею, не используйте ее.\nYou can use any numbers in the numbered list — it doesn’t matter. When converted to HTML or another format, the numbers will become correct and consistent (1, 2, 3, etc.).\n","date":1652486400,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652486400,"objectID":"02c740af12884083cfd2e414c5541109","permalink":"https://jerando4.github.io/ru/post/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%B5%D0%B7%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D0%B8/","publishdate":"2022-05-14T00:00:00Z","relpermalink":"/ru/post/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%B5%D0%B7%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D0%B8/","section":"post","summary":"Хорошая презентация начинается с вопросов к самому себе. Самую важную часть вы можете сделать в блокноте, даже не включая компьютер. Сначала вы выбираете тему, определяете цель и распределяете аргументы в правильном порядке.","tags":["3 неделя"],"title":"Создание презентации","type":"post"},{"authors":["Никита Кармацкий"],"categories":["пост 2"],"content":"  На второй неделе я сделал все лабораторные работы, которые доступны на данный момент.\n  Я всю неделю вкусно питался.\n  Вспомнил основы языка программирования C++\n  Я больше не знаю, что написать, поэтому цитата из одной из моих любимых видеоигр на русском языке:\n  “Говорят, моё место среди богов. Неправда. Я возвышаюсь над ними.”\n","date":1651968000,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1651968000,"objectID":"fa5d0aef9c7b1d8a6b133a91a49ac1fc","permalink":"https://jerando4.github.io/ru/post/2-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","publishdate":"2022-05-08T00:00:00Z","relpermalink":"/ru/post/2-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","section":"post","summary":"На второй неделе я сделал все лабораторные работы, которые доступны на данный момент.\n  Я всю неделю вкусно питался.\n  Вспомнил основы языка программирования C++\n  Я больше не знаю, что написать, поэтому цитата из одной из моих любимых видеоигр на русском языке:","tags":["2 неделя"],"title":"Как прошла моя вторая неделя","type":"post"},{"authors":["Никита Кармацкий"],"categories":["post 2"],"content":"Markdown - это язык разметки текстов. Такие тексты легко писать и читать. Они могут быть легко преобразованы в HTML. Большинство программистов предпочитают Markdown для написания документации, описания своих проектов, ведения блогов и так далее.\nЧто это значит? “Язык разметки” - это всего лишь набор соглашений, правил.\nДопустим, вы общаетесь с другом по SMS. Вы не можете сделать текст в них жирным или наклонным. Вы согласны с другом: если я напишу что-то так между звездочками, то считайте это наклонным текстом. И если я напишу ** что-то ** между двумя звездочками, то считайте это жирным шрифтом. Ты придумал правила.\nMarkdown - это набор аналогичных правил.\nПочему это необходимо?   Добавить разметку в тех местах, где реальная разметка невозможна. Например, в простом текстовом файле или в том же SMS, где невозможно выделить жирным шрифтом, создать заголовки, выделить кавычки и т.д.\n  Для более удобного написания текстов для последующего преобразования в HTML или другие форматы.\n  Синтаксис Markdown Это краткое описание основных элементов синтаксиса Markdown. Единого стандарта не существует, и разные версии Markdown могут отличаться в деталях. Но основные элементы из приведенного ниже списка поддерживаются во всех стандартах.\nВыделение текста *Этот текст будет выделен наклонным шрифтом (курсивом). *\n_ Этот текст будет выделен наклонным шрифтом (курсивом) _\n** Этот текст будет выделен жирным шрифтом **\n__ This text will be bold __\n_ Можно ** вставить ** один тип в другой _\nЗаголовки #Это самый большой заголовок, он превращается в тег \u0026lt;h1\u0026gt; ##\u0026lt;h2\u0026gt; ###\u0026lt;h3\u0026gt; ####\u0026lt;h4\u0026gt; #####\u0026lt;h5\u0026gt; ######\u0026lt;h6\u0026gt;  Ссылки https://github.com — текст простой ссылки автоматически станет кликабельной ссылкой\nЛюбой текст можно сделать ссылкой:\nЭто ссылка на GitHub\nЦитата  (\u0026gt;)Это мудрая цитата\n  (\u0026gt;)Мудрый человек.\n Пишите без скобок!!!\nСписки Ненумерованный список:\n  Пункт (*)\n  Еще один пункт (*)\n  Подпункт (Tab + *)\n  Еще один подпункт (Tab + *)\n    Пишите без скобок и перед абзацами!!!\nДля подпунктов используйте TAB\nНумерованный список:   Пункт\n  Еще один момент\n  Подпункт\n  Еще один подпункт\n    Для подпунктов используйте TAB\nВы можете использовать любые цифры в нумерованном списке — это не имеет значения. При преобразовании в HTML или другой формат числа станут правильными и последовательными (1, 2, 3 и т.д.).\n","date":1651968000,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1651968000,"objectID":"ba2dc0057a2515a60f666018f48b00ee","permalink":"https://jerando4.github.io/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown/","publishdate":"2022-05-08T00:00:00Z","relpermalink":"/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown/","section":"post","summary":"Markdown - это язык разметки текстов. Такие тексты легко писать и читать. Они могут быть легко преобразованы в HTML. Большинство программистов предпочитают Markdown для написания документации, описания своих проектов, ведения блогов и так далее.","tags":["2 week"],"title":"Язык разметки Markdown","type":"post"},{"authors":["Никита Кармацкий"],"categories":["пост 1"],"content":"  На прошлой неделе я сделал 3 лабораторные работы, а на самом деле 4, потому что суть одной лабораторной работы заключалась в том, что нужно было переписать отчет о предыдущей лабораторной работе, а затем написать отчет по этой работе.\n  Я всю неделю вкусно питался.\n  Он также защитил свой доклад на максимальное количество баллов. Он очень хорошо произнес монолог по-английски.\n  Я больше не знаю, что писать, поэтому вырезка из одной из моих любимых видеоигр на русском языке:\n  “Появился, значит, в Зоне Чёрный сталкер. К лагерю ночью повадился ходить и там сует руку в палатку и говорит: «Водички попить!» А если не дашь хлебнуть из фляжки или наружу полезешь — пришибет! А раз мужик один решил пошутить: вылез тихо из палатки, надел кожаную перчатку и полез к соседям в палатку. Полез, значит, и попрошайничает жалостно: «Водички, водички попить…» А тут из палатки навстречу высовывается рука и за горло его — цап! И сиплый голосок отзывается тихонько: «А тебе моя водичка зачем нужна?!”\n","date":1651795200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1651795200,"objectID":"6b57c5531235ab3a268bbcfd7512b36c","permalink":"https://jerando4.github.io/ru/post/1-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","publishdate":"2022-05-06T00:00:00Z","relpermalink":"/ru/post/1-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","section":"post","summary":"На прошлой неделе я сделал 3 лабораторные работы, а на самом деле 4, потому что суть одной лабораторной работы заключалась в том, что нужно было переписать отчет о предыдущей лабораторной работе, а затем написать отчет по этой работе.","tags":["1 неделя"],"title":"Как прошла моя первая неделя","type":"post"},{"authors":["Никита Кармацкий"],"categories":["пост 2"],"content":"Обзор  О системе контроля версий  Что такое “система контроля версий” и почему это важно? Система контроля версий - это система, которая записывает изменения в файл или набор файлов с течением времени и позволяет вам позже вернуться к определенной версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любого типа файлов.\nЕсли вы графический или веб—дизайнер и хотите сохранять каждую версию изображения или макета (скорее всего, вы это сделаете), система контроля версий (далее именуемая SLE) - как раз то, что вам нужно. Это позволяет вам вернуть файлы в состояние, в котором они были до изменений, вернуть проект в исходное состояние, просмотреть изменения, посмотреть, кто в последний раз что-то менял и вызвал проблему, кто поставил задачу и когда, и многое другое. Использование SLE также в целом означает, что если вы что-то сломали или потеряли файлы, вы можете безопасно все исправить. В дополнение ко всему, вы получите все это без каких-либо дополнительных усилий.\nЛокальные системы контроля версий  Многие люди используют копирование файлов в отдельный каталог в качестве метода контроля версий (возможно, даже в каталог с отметкой времени, если они достаточно умны). Этот подход очень распространен из-за своей простоты, но он невероятно подвержен ошибкам. Вы можете легко забыть, в каком каталоге вы находитесь, и случайно изменить неправильный файл или скопировать не те файлы, которые вы хотели.\nЧтобы решить эту проблему, программисты давно разработали local SLE с простой базой данных, которая хранит записи обо всех изменениях в файлах, тем самым отслеживая изменения.\n   Рисунок 1. Локальный контроль версий\nЦентрализованные системы контроля версий  Следующая серьезная проблема, с которой сталкиваются люди, - это необходимость взаимодействия с другими разработчиками. Чтобы справиться с этим, были разработаны централизованные системы управления версиями (CSKA). Такие системы, как CVS, Subversion и Perforce, используют единый сервер, содержащий все версии файлов, и ряд клиентов, которые получают файлы из этого централизованного хранилища. Использование ЦСКА было стандартом на протяжении многих лет.\n   Рисунок 2. Централизованное управление версиями\nЭтот подход имеет много преимуществ, особенно по сравнению с локальной СКВ. Например, все разработчики проектов в определенной степени знают, что делает каждый из них. Администраторы имеют полный контроль над тем, кто что может делать, и гораздо проще администрировать CSCS, чем управлять локальными базами данных на каждом клиенте.\nНесмотря на это, такой подход также имеет серьезные недостатки. Наиболее очевидным недостатком является единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать систему управления версиями для сохранения изменений, над которыми они работают, и никто не сможет поделиться этими изменениями с другими разработчиками. Если жесткий диск, на котором хранится центральная база данных, поврежден, и нет своевременных резервных копий, вы потеряете все — всю историю проекта, не считая отдельных снимков репозитория, которые были сохранены на локальных машинах разработчика. Локальные SLE страдают от той же проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять все.\nРаспределенные системы контроля версий  Именно здесь в игру вступают распределенные системы контроля версий (RSCs). В RSKV (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто загружают снимок всех файлов (состояние файлов на определенный момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умирает, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия хранилища представляет собой полную резервную копию всех данных.\n   Рисунок 3. Распределенный контроль версий\nБолее того, многие RSCs могут одновременно взаимодействовать с несколькими удаленными репозиториями, благодаря этому вы можете работать с разными группами людей, используя разные подходы одновременно в рамках одного и того же проекта. Это позволяет применять сразу несколько подходов к разработке, например, иерархические модели, что совершенно невозможно в централизованных системах.\nЧто такое Git?  Короче говоря, что такое Git? Очень важно понять эту часть материала, потому что, если вы понимаете, что такое Git и основы того, как он работает, вам может быть намного проще его использовать. Пока вы изучаете Git, постарайтесь забыть все, что вы знаете о других SLE, таких как Subversion и Perforce. Это позволит вам избежать определенных проблем при использовании инструмента. Git хранит и использует информацию совершенно по-другому по сравнению с другими системами, хотя пользовательский интерфейс довольно похож, и понимание этих …","date":1651795200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1651795200,"objectID":"47a13a899f5f41921ae3758995661250","permalink":"https://jerando4.github.io/ru/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8.-git./","publishdate":"2022-05-06T00:00:00Z","relpermalink":"/ru/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8.-git./","section":"post","summary":"Сегодня мы поговорим о Управление версиями и Git.","tags":["Управление версиями и Git"],"title":"Управление версиями. Git.","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://jerando4.github.io/ru/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/ru/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Никита Кармацкий"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://jerando4.github.io/ru/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"Примерный документ конференции","type":"publication"},{"authors":["Никита Кармацкий"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1372636800,"objectID":"f5c3e533e8162b8e877e6bdc1d547e94","permalink":"https://jerando4.github.io/ru/publication/example2/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/example2/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"Примерный документ конференции","type":"publication"}]